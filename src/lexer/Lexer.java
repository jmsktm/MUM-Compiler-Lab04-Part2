/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharLiteral(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscapeStringLiteral(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscape(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessThan(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessThanOrEq(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGreaterThan(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGreaterThanOrEq(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEquals(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBkt(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBkt(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNotEquals(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqualTo(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPointer(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TModulo(line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatLit(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBool(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChar(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinue(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKclass(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDo(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloat(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInt(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNew(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNull(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrivate(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProtected(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPublic(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStatic(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStruct(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThis(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoid(line, pos); }
    Token new58(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntegerLiteral(text, line, pos); }
    Token new59(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {37, 37, 8}, {38, 38, 9}, {39, 39, 10}, {40, 40, 11}, {41, 41, 12}, {42, 42, 13}, {43, 43, 14}, {44, 44, 15}, {45, 45, 16}, {46, 46, 17}, {47, 47, 18}, {48, 48, 19}, {49, 57, 20}, {58, 58, 21}, {59, 59, 22}, {60, 60, 23}, {61, 61, 24}, {62, 62, 25}, {65, 90, 26}, {91, 91, 27}, {93, 93, 28}, {95, 95, 26}, {97, 97, 26}, {98, 98, 29}, {99, 99, 30}, {100, 100, 31}, {101, 101, 32}, {102, 102, 33}, {103, 104, 26}, {105, 105, 34}, {106, 109, 26}, {110, 110, 35}, {111, 111, 26}, {112, 112, 36}, {113, 113, 26}, {114, 114, 37}, {115, 115, 38}, {116, 116, 39}, {117, 117, 26}, {118, 118, 40}, {119, 119, 41}, {120, 122, 26}, {123, 123, 42}, {124, 124, 43}, {125, 125, 44}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 45}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 46}, },
            {{0, 9, 47}, {11, 12, 47}, {14, 33, 47}, {34, 34, 48}, {35, 91, 47}, {92, 92, 49}, {93, 65535, 47}, },
            {},
            {{38, 38, 50}, },
            {{32, 32, 51}, {33, 33, 52}, {34, 34, 53}, {35, 35, 54}, {36, 36, 55}, {37, 37, 56}, {38, 38, 57}, {40, 40, 58}, {41, 41, 59}, {42, 42, 60}, {43, 43, 61}, {44, 44, 62}, {45, 45, 63}, {46, 46, 64}, {47, 47, 65}, {48, 57, 66}, {58, 58, 67}, {59, 59, 68}, {60, 60, 69}, {61, 61, 70}, {62, 62, 71}, {63, 63, 72}, {64, 64, 73}, {65, 90, 74}, {91, 91, 75}, {92, 92, 76}, {93, 93, 77}, {94, 94, 78}, {95, 95, 79}, {96, 96, 80}, {97, 122, 81}, {123, 123, 82}, {124, 124, 83}, {125, 125, 84}, {126, 126, 85}, },
            {},
            {},
            {},
            {},
            {},
            {{62, 62, 86}, },
            {{48, 57, 87}, },
            {{42, 42, 88}, {47, 47, 89}, },
            {{46, 46, 90}, {48, 57, 91}, },
            {{46, 46, 90}, {48, 57, 92}, },
            {},
            {},
            {{61, 61, 93}, },
            {{61, 61, 94}, },
            {{61, 61, 95}, },
            {{48, 57, 96}, {65, 90, 96}, {95, 95, 96}, {97, 122, 96}, },
            {},
            {},
            {{48, 95, -28}, {97, 110, 96}, {111, 111, 97}, {112, 113, 96}, {114, 114, 98}, {115, 122, 96}, },
            {{48, 95, -28}, {97, 103, 96}, {104, 104, 99}, {105, 107, 96}, {108, 108, 100}, {109, 110, 96}, {111, 111, 101}, {112, 122, 96}, },
            {{48, 110, -31}, {111, 111, 102}, {112, 122, 96}, },
            {{48, 95, -28}, {97, 107, 96}, {108, 108, 103}, {109, 122, 96}, },
            {{48, 95, -28}, {97, 97, 104}, {98, 107, 96}, {108, 108, 105}, {109, 122, 96}, },
            {{48, 95, -28}, {97, 101, 96}, {102, 102, 106}, {103, 109, 96}, {110, 110, 107}, {111, 122, 96}, },
            {{48, 95, -28}, {97, 100, 96}, {101, 101, 108}, {102, 116, 96}, {117, 117, 109}, {118, 122, 96}, },
            {{48, 95, -28}, {97, 113, 96}, {114, 114, 110}, {115, 116, 96}, {117, 117, 111}, {118, 122, 96}, },
            {{48, 100, -37}, {101, 101, 112}, {102, 122, 96}, },
            {{48, 95, -28}, {97, 115, 96}, {116, 116, 113}, {117, 122, 96}, },
            {{48, 103, -32}, {104, 104, 114}, {105, 113, 96}, {114, 114, 115}, {115, 122, 96}, },
            {{48, 110, -31}, {111, 111, 116}, {112, 122, 96}, },
            {{48, 103, -32}, {104, 104, 117}, {105, 122, 96}, },
            {},
            {{124, 124, 118}, },
            {},
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{0, 33, -9}, {34, 34, 119}, {35, 38, 47}, {39, 39, 120}, {40, 91, 47}, {92, 92, 121}, {93, 97, 47}, {98, 98, 122}, {99, 101, 47}, {102, 102, 123}, {103, 109, 47}, {110, 110, 124}, {111, 113, 47}, {114, 114, 125}, {115, 115, 47}, {116, 116, 126}, {117, 65535, 47}, },
            {},
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{34, 34, 128}, {39, 39, 129}, {92, 92, 130}, {98, 98, 131}, {102, 102, 132}, {110, 110, 133}, {114, 114, 134}, {116, 116, 135}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {{39, 39, 127}, },
            {},
            {{48, 57, 87}, {69, 69, 136}, {101, 101, 137}, },
            {{0, 41, 138}, {42, 42, 139}, {43, 65535, 138}, },
            {{0, 9, 140}, {10, 10, 141}, {11, 12, 140}, {13, 13, 142}, {14, 65535, 140}, },
            {{48, 57, 143}, {69, 101, -89}, },
            {{46, 57, -21}, },
            {{46, 57, -22}, },
            {},
            {},
            {},
            {{48, 122, -28}, },
            {{48, 110, -31}, {111, 111, 144}, {112, 122, 96}, },
            {{48, 100, -37}, {101, 101, 145}, {102, 122, 96}, },
            {{48, 95, -28}, {97, 97, 146}, {98, 122, 96}, },
            {{48, 95, -28}, {97, 97, 147}, {98, 122, 96}, },
            {{48, 95, -28}, {97, 109, 96}, {110, 110, 148}, {111, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 114, 96}, {115, 115, 149}, {116, 122, 96}, },
            {{48, 107, -34}, {108, 108, 150}, {109, 122, 96}, },
            {{48, 110, -31}, {111, 111, 151}, {112, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 115, -40}, {116, 116, 152}, {117, 122, 96}, },
            {{48, 95, -28}, {97, 118, 96}, {119, 119, 153}, {120, 122, 96}, },
            {{48, 107, -34}, {108, 108, 154}, {109, 122, 96}, },
            {{48, 95, -28}, {97, 104, 96}, {105, 105, 155}, {106, 110, 96}, {111, 111, 156}, {112, 122, 96}, },
            {{48, 95, -28}, {97, 97, 96}, {98, 98, 157}, {99, 122, 96}, },
            {{48, 115, -40}, {116, 116, 158}, {117, 122, 96}, },
            {{48, 95, -28}, {97, 97, 159}, {98, 113, 96}, {114, 114, 160}, {115, 122, 96}, },
            {{48, 104, -112}, {105, 105, 161}, {106, 122, 96}, },
            {{48, 95, -28}, {97, 116, 96}, {117, 117, 162}, {118, 122, 96}, },
            {{48, 104, -112}, {105, 105, 163}, {106, 122, 96}, },
            {{48, 104, -112}, {105, 105, 164}, {106, 122, 96}, },
            {},
            {{0, 9, 165}, {11, 12, 165}, {14, 33, 165}, {34, 34, 166}, {35, 91, 165}, {92, 92, 167}, {93, 65535, 165}, },
            {{0, 65535, -9}, },
            {{0, 65535, -51}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 168}, },
            {{39, 39, 168}, },
            {{39, 39, 168}, },
            {{39, 39, 168}, },
            {{39, 39, 168}, },
            {{39, 39, 168}, },
            {{39, 39, 168}, },
            {{39, 39, 168}, },
            {{43, 43, 169}, {45, 45, 170}, {48, 57, 171}, },
            {{43, 57, -138}, },
            {{0, 65535, -90}, },
            {{0, 41, 172}, {42, 42, 139}, {43, 46, 172}, {47, 47, 173}, {48, 65535, 172}, },
            {{0, 65535, -91}, },
            {},
            {{10, 10, 174}, },
            {{48, 101, -92}, },
            {{48, 107, -34}, {108, 108, 175}, {109, 122, 96}, },
            {{48, 95, -28}, {97, 97, 176}, {98, 122, 96}, },
            {{48, 113, -38}, {114, 114, 177}, {115, 122, 96}, },
            {{48, 114, -105}, {115, 115, 178}, {116, 122, 96}, },
            {{48, 114, -105}, {115, 115, 179}, {116, 116, 180}, {117, 122, 96}, },
            {{48, 100, -37}, {101, 101, 181}, {102, 122, 96}, },
            {{48, 114, -105}, {115, 115, 182}, {116, 122, 96}, },
            {{48, 95, -28}, {97, 97, 183}, {98, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 107, -34}, {108, 108, 184}, {109, 122, 96}, },
            {{48, 95, -28}, {97, 117, 96}, {118, 118, 185}, {119, 122, 96}, },
            {{48, 115, -40}, {116, 116, 186}, {117, 122, 96}, },
            {{48, 107, -34}, {108, 108, 187}, {109, 122, 96}, },
            {{48, 116, -117}, {117, 117, 188}, {118, 122, 96}, },
            {{48, 115, -40}, {116, 116, 189}, {117, 122, 96}, },
            {{48, 104, -112}, {105, 105, 190}, {106, 116, 96}, {117, 117, 191}, {118, 122, 96}, },
            {{48, 114, -105}, {115, 115, 192}, {116, 122, 96}, },
            {{48, 100, -37}, {101, 101, 193}, {102, 122, 96}, },
            {{48, 95, -28}, {97, 99, 96}, {100, 100, 194}, {101, 122, 96}, },
            {{48, 107, -34}, {108, 108, 195}, {109, 122, 96}, },
            {{0, 65535, -121}, },
            {},
            {{0, 33, -121}, {34, 34, 196}, {35, 38, 165}, {39, 39, 197}, {40, 91, 165}, {92, 92, 198}, {93, 97, 165}, {98, 98, 199}, {99, 101, 165}, {102, 102, 200}, {103, 109, 165}, {110, 110, 201}, {111, 113, 165}, {114, 114, 202}, {115, 115, 165}, {116, 116, 203}, {117, 65535, 165}, },
            {},
            {{48, 57, 171}, },
            {{48, 57, 171}, },
            {{48, 57, 171}, },
            {{0, 41, 204}, {42, 42, 205}, {43, 65535, 204}, },
            {},
            {},
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 106, 96}, {107, 107, 206}, {108, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 114, -105}, {115, 115, 207}, {116, 122, 96}, },
            {{48, 115, -40}, {116, 116, 208}, {117, 122, 96}, },
            {{48, 104, -112}, {105, 105, 209}, {106, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 100, -37}, {101, 101, 210}, {102, 122, 96}, },
            {{48, 115, -40}, {116, 116, 211}, {117, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 97, 212}, {98, 122, 96}, },
            {{48, 100, -37}, {101, 101, 213}, {102, 122, 96}, },
            {{48, 104, -112}, {105, 105, 214}, {106, 122, 96}, },
            {{48, 113, -38}, {114, 114, 215}, {115, 122, 96}, },
            {{48, 104, -112}, {105, 105, 216}, {106, 122, 96}, },
            {{48, 109, -103}, {110, 110, 217}, {111, 122, 96}, },
            {{48, 95, -28}, {97, 98, 96}, {99, 99, 218}, {100, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 100, -37}, {101, 101, 219}, {102, 122, 96}, },
            {{0, 65535, -121}, },
            {{0, 65535, -121}, },
            {{0, 65535, -169}, },
            {{0, 65535, -121}, },
            {{0, 65535, -121}, },
            {{0, 65535, -121}, },
            {{0, 65535, -121}, },
            {{0, 65535, -121}, },
            {{0, 65535, -174}, },
            {{0, 41, 172}, {42, 42, 205}, {43, 65535, -141}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 109, -103}, {110, 110, 220}, {111, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 115, -40}, {116, 116, 221}, {117, 122, 96}, },
            {{48, 98, -193}, {99, 99, 222}, {100, 122, 96}, },
            {{48, 98, -193}, {99, 99, 223}, {100, 122, 96}, },
            {{48, 109, -103}, {110, 110, 224}, {111, 122, 96}, },
            {{48, 98, -193}, {99, 99, 225}, {100, 122, 96}, },
            {{48, 95, -28}, {97, 102, 96}, {103, 103, 226}, {104, 122, 96}, },
            {{48, 115, -40}, {116, 116, 227}, {117, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 116, -117}, {117, 117, 228}, {118, 122, 96}, },
            {{48, 100, -37}, {101, 101, 229}, {102, 122, 96}, },
            {{48, 115, -40}, {116, 116, 230}, {117, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 100, -37}, {101, 101, 231}, {102, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 100, -37}, {101, 101, 232}, {102, 122, 96}, },
            {{48, 122, -28}, },
            {{48, 99, -165}, {100, 100, 233}, {101, 122, 96}, },
            {{48, 122, -28}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {32, 32, 32, 32, 32, 32, 16, -1, 30, -1, -1, 20, 21, 7, 5, 19, 6, 29, 8, 58, 58, 17, 18, 9, 27, 11, 59, 24, 25, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, -1, 23, 32, 26, -1, 1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, 31, -1, -1, 31, -1, 58, 10, 13, 12, 59, 59, 59, 59, 59, 59, 39, 59, 59, 59, 43, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 15, 1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 31, 59, 59, 59, 59, 59, 59, 59, 59, 44, 45, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, -1, 3, -1, 4, -1, -1, 31, -1, 0, 0, 33, 59, 35, 59, 59, 59, 40, 59, 59, 46, 59, 59, 59, 59, 59, 59, 59, 54, 55, 57, 59, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, 38, 36, 59, 41, 42, 59, 59, 59, 59, 59, 59, 59, 56, 59, 59, 59, 49, 50, 51, 52, 53, 59, 47, 59, 37, 59, 48, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
